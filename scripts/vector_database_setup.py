# scripts/vector_database_setup.py

import os
from langchain_community.document_loaders import DirectoryLoader, PyPDFLoader
from langchain.text_splitter import RecursiveCharacterTextSplitter
from langchain_huggingface import HuggingFaceEmbeddings
from langchain_community.vectorstores import Chroma

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏á‡∏ó‡∏µ‡πà
PDF_DIR = "pdfs"
DB_PATH = "chroma_db_langchain" # ‡∏™‡∏£‡πâ‡∏≤‡∏á DB ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö LangChain
MODEL_NAME = "Qwen/Qwen3-Embedding-0.6B" # ‡∏´‡∏£‡∏∑‡∏≠ 'intfloat/multilingual-e5-large' ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ó‡∏¢

def setup():
    print("üöÄ Starting vector database setup...")

    # 1. Load Documents (‡πÇ‡∏´‡∏•‡∏î PDF ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå)
    # ‡πÉ‡∏ä‡πâ PyPDFLoader ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå PDF ‡πÉ‡∏ô Directory
    loader = DirectoryLoader(
        PDF_DIR,
        glob="*.pdf",
        loader_cls=PyPDFLoader,
        show_progress=True
    )
    documents = loader.load()
    if not documents:
        print("No PDF documents found. Exiting.")
        return

    print(f"‚úÖ Loaded {len(documents)} document(s).")

    # 2. Split Documents into Chunks
    # RecursiveCharacterTextSplitter ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà‡∏â‡∏•‡∏≤‡∏î‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡∏î‡∏Ñ‡∏≥
    # ‡∏°‡∏±‡∏ô‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ‡πÅ‡∏•‡∏∞‡∏¢‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏±‡∏ô
    text_splitter = RecursiveCharacterTextSplitter(
        chunk_size=1000,
        chunk_overlap=100
    )
    chunks = text_splitter.split_documents(documents)
    print(f"üìÑ Split documents into {len(chunks)} chunks.")

    # 3. Create Embeddings Model
    # LangChain ‡∏°‡∏µ wrapper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö sentence-transformers ‡∏Ñ‡∏∑‡∏≠ HuggingFaceEmbeddings
    print(f"ü§ñ Loading embedding model: {MODEL_NAME}")
    embeddings = HuggingFaceEmbeddings(model_name=MODEL_NAME)

    # 4. Create and Persist Vector Store (ChromaDB)
    # .from_documents ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏°‡∏´‡∏±‡∏®‡∏à‡∏£‡∏£‡∏¢‡πå‡∏Ç‡∏≠‡∏á LangChain
    # ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á embedding ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á DB ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    print(f"üì¶ Creating and persisting vector store at: {DB_PATH}")
    vector_store = Chroma.from_documents(
        documents=chunks,
        embedding=embeddings,
        persist_directory=DB_PATH
    )

    print("\n‚úÖ Vector database setup complete!")

if __name__ == "__main__":
    setup()
