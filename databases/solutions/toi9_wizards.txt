#include <bits/stdc++.h>

using namespace std;


int di,dj,n;

vector<pair<int,int>> a,b,c,d;

vector<pair<pair<int,int>,pair<int,int>>> mp;


int main(){

    cin>>di>>dj;

    cin>>n;

    for(int j=1;j<=n;j++){

        int A,B;

        cin>>A>>B;

        a.push_back({A,B});

    }

    for(int j=1;j<=n;j++){

        int A,B;

        cin>>A>>B;

        b.push_back({A,B});

    }

    for(int j=1;j<=n;j++){

        int A,B;

        cin>>A>>B;

        c.push_back({A,B});

    }

    for(int j=1;j<=n;j++){

        int A,B;

        cin>>A>>B;

        d.push_back({A,B});

    }

    for(int i=0;i<n;i++){

        for(int j=0;j<n;j++){

            int fx=a[i].first+b[j].first;

            int fy=a[i].second+b[j].second;

            mp.push_back({{fx,fy},{i,j}});

        }

    }

    int len=mp.size()-1;

    sort(mp.begin(),mp.end());

    for(int i=0;i<n;i++){

        for(int j=0;j<n;j++){

            int tx1=c[i].first+d[j].first;

            int ty1=c[i].second+d[j].second;

            int tx=di-tx1;

            int ty=dj-ty1;

            int l=0;

            int r=len;

            while(l<=r){

                int mid=(l+r)/2;

                if(mp[mid].first.first>tx){

                    r=mid-1;

                }

                else if(mp[mid].first.first<tx){

                    l=mid+1;

                }

                else{

                    if(mp[mid].first.second>ty){

                        r=mid-1;

                    }

                    else if(mp[mid].first.second<ty){

                        l=mid+1;

                    }

                    else{

                        int A=mp[mid].second.first;

                        int B=mp[mid].second.second;

                        cout<<a[A].first<<' '<<a[A].second<<'\n';

                        cout<<b[B].first<<' '<<b[B].second<<'\n';

                        cout<<c[i].first<<' '<<c[i].second<<'\n';

                        cout<<d[j].first<<' '<<d[j].second<<'\n';

                        return 0;

                    }

                }

            }

        }

    }

}