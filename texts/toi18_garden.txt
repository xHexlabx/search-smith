[cite_start]The 18th National Computer Olympiad examination at Chiang Mai University includes Problem 2 out of 3, held on Thursday, June 2, 2565 BE (2022 CE), from 09:00 to 12:00[cite: 1].

[cite_start]The problem is titled "Botanical Garden"[cite: 2].

Normally, the CMU Botanical Garden displays N trees arranged in a long row from left to right. [cite_start]This arrangement can be described by an array A, where A[i] is the height of the tree at position i, and A[i] is a positive integer[cite: 2]. [cite_start]For example, Figure 1 shows 16 trees with heights 2, 1, 5, 4, 8, 6, 8, 10, 9, 1, 7, 5, 4, 1, 9, and 3 units, respectively, at positions 0 to 15[cite: 2].

[cite_start]The garden's caretaker wants to rearrange the trees according to new conditions[cite: 2]:
1.  [cite_start]A tree at position X is selected as the main tree, with height A[X][cite: 2].
2.  [cite_start]The main tree must be the *only* tallest tree in the new arrangement[cite: 2].
3.  [cite_start]For any other tree to the left of the main tree, the height of the tree immediately to its left must always be shorter[cite: 2].
4.  [cite_start]For any other tree to the right of the main tree, the height of the tree immediately to its right must always be shorter[cite: 2].
5.  The number of trees to the left and to the right of the main tree must be equal, say k trees on each side. [cite_start]This means the new arrangement will have a total of $2k+1$ trees[cite: 2].
6.  [cite_start]The caretaker may need to remove some trees for this new arrangement[cite: 2].

**Example A:**
From Figure 1, if the tree at position $X=7$ is chosen as the main tree, its height is $A[X]=10$. [cite_start]The caretaker can arrange the trees in several ways according to the new conditions[cite: 3].
Figure 2 shows one example of a new arrangement where trees at positions 0, 2, 4, 9, 13, 14, and 15 are removed. [cite_start]The remaining trees are at positions 1, 3, 5, 6, 7, 8, 10, 11, and 12, with heights 1, 4, 6, 8, 10, 9, 7, 5, and 4 units, respectively[cite: 3].
The heights of the trees to the left and right of the main tree satisfy the conditions. [cite_start]There are 4 trees to the left (positions 1, 3, 5, and 6) and 4 trees to the right (positions 8, 10, 11, and 12), so $k=4$[cite: 3].

Figure 3 is another example of a new arrangement where trees at positions 1, 3, 5, 6, 7, 10, 11, 12, and 15 are kept. [cite_start]Their heights are 1, 4, 6, 8, 10, 7, 5, 4, and 3 units, respectively, also resulting in $k=4$[cite: 5].

**Example B:**
From Figure 1, if the tree at position $X=14$ is chosen as the main tree, the caretaker can arrange the trees in several ways. [cite_start]Figure 4 shows one way, where some trees are removed, and $k=1$[cite: 5].

**Your Task:**
[cite_start]Write an efficient program to find the largest possible value of $k$ for each given $X$ that allows the trees to be arranged according to the specified conditions[cite: 5].

**Input:**
[cite_start]The input consists of 3 lines[cite: 6]:
* [cite_start]Line 1: Two integers separated by a single space[cite: 7].
    * [cite_start]The first number, N, specifies the total number of trees[cite: 7].
    * [cite_start]The second number, Q, specifies the total number of X values[cite: 7].
    * [cite_start]Constraints: $3 \le Q \le N \le 200,000$[cite: 7].
* Line 2: N integers separated by single spaces. [cite_start]Each integer $h_i$ represents the height of the tree at position i[cite: 7].
    * [cite_start]Constraints: $1 \le h_i \le 10^9$ and $0 \le i \le N-1$[cite: 7].
* [cite_start]Line 3: Q integers separated by single spaces[cite: 7].
    * [cite_start]Each integer $X_j$ represents the position of a main tree[cite: 7].
    * [cite_start]Constraints: $0 \le X_j < N$ and $1 \le j \le Q$[cite: 7].

**Output:**
[cite_start]The output will have Q lines[cite: 8]. [cite_start]Each line should contain the largest value of $k$ for the corresponding given $X$ that satisfies the new arrangement conditions[cite: 8].

**Example Input/Output:**
[cite_start]**Example 1** [cite: 9]
Input:
10 4
2 4 6 8 10 9 7 5 3 1
9 4 0 3
Output:
0
4
0
3

[cite_start]**Example 2** [cite: 9]
Input:
16 3
2 1 5 4 8 6 8 10 9 1 7 5 4 1 9 3
7 14 1
Output:
4
1
0

**Constraints:**
* [cite_start]Input: Standard Input (keyboard) [cite: 12]
* [cite_start]Output: Standard Output (screen) [cite: 12]
* [cite_start]Maximum processing time: 1 second [cite: 12]
* [cite_start]Maximum memory usage: 1024 MB [cite: 12]
* [cite_start]Maximum score for the problem: 100 points [cite: 12]
* [cite_start]Program execution condition: The program must compile successfully[cite: 12].

**Additional Information about Test Cases:**
| Group Test Case | Maximum Score for this group | Condition |
|---|---|---|
| 1 | 7 | [cite_start]$N \le 15$ and all tree heights are distinct [cite: 14] |
| 2 | 11 | [cite_start]$N \le 15$ [cite: 14] |
| 3 | 14 | In each test case with N trees, it is guaranteed that all tree heights are distinct. [cite_start]There is always a single tallest tree at position $z$ with height $A[z]$, where $A[i] < A[i+1]$ for $0 \le i < z$ and $A[i] > A[i+1]$ for $z < i < N-1$[cite: 14]. |
| 4 | 27 | In each test case with N trees, it is guaranteed that tree heights from position 0 to p are sorted in ascending order and are unique, where $0 \le p < N$. [cite_start]The selected main tree will always be at a position from 0 to p[cite: 14]. |
| 5 | 22 | [cite_start]$N \le 10,000$ [cite: 14] |
| 6 | 19 | [cite_start]No other conditions [cite: 14] |

**Programming Recommendations:**
[cite_start]If using `cin`/`cout`, it is recommended to add the following two lines[cite: 16]:
```cpp
std::ios_base::sync_with_stdio(false);
std::cin.tie(NULL);
```