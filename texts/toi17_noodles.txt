The 17th National Computer Olympiad examination, held online at Walailak University, presents Problem 2 out of 3. The exam took place on Friday, December 10, 2564 BE (2021 CE), from 13:00 to 16:00.

The problem is titled "Nakhon Kanom Jeen" (Fermented Rice Noodle).

Walai Fresh Noodles, a renowned fermented rice noodle factory in Nakhon Hansa City, faces challenges in allocating noodles to various noodle shops in the city. Due to the deliciousness and high quality of Walai Fresh Noodles, the factory has expanded its noodle collection channels to N channels, numbered 1 to N. Each channel can receive different quantities of noodles. The factory has a diverse customer base, including M large, regular noodle shops and other small retailers. The factory often receives complaints from customers that its allocation of noodles to shops for sale is unfair. Therefore, the factory has implemented a policy to allocate noodle quotas to the large noodle shops (all M shops) by allowing each shop to collect noodles from channels reserved by the factory. However, each shop can only collect noodles from K channels (the factory will always reserve at least K channels). For other channels that a shop does not use, the factory will supply noodles to small retailers itself. Since all large shops are business competitors, the factory has set the following rules for reserving noodle collection channels:

Each shop will be allocated a contiguous block of reserved channels, with no other shops in between.
* The first shop will be allocated channels 1 to $m_1$ (where $m_1 \ge K$).
* The second shop will be allocated channels $m_1+1$ to $m_2$ (where $m_2 - m_1 \ge K$).
* The third shop will be allocated channels $m_2+1$ to $m_3$ (where $m_3 - m_2 \ge K$).
* And so on, up to the M-th shop.
* The M-th shop will be allocated channels $m_{M-1}+1$ to N (where $N - m_{M-1} \ge K$).

[cite_start]Under the factory's conditions, each shop can choose to collect the maximum possible quantity of noodles from only K channels, even if the factory reserves more than K channels for them. [cite: 2]

However, even with these allocation rules, there are still complaints about unfair noodle distribution. Therefore, the factory is seeking a strategy to re-adjust the allocation of reserved channels to make the shops feel that the allocation is fairer. [cite_start]This strategy aims to maximize the minimum total quantity of noodles received by any shop. [cite: 3]

[cite_start]For example, the factory has N=12 noodle collection channels, and each channel can deliver the quantity of noodles shown in Figure 1. The factory has M=3 large noodle shops, and each shop has a quota to collect noodles from only K=3 channels. [cite: 3]

[cite_start]Figure 1 shows an example of noodle production at the factory and two ways of reserving noodle collection channels: Way 1 and Way 2. [cite: 5]
[cite_start]Table 1 shows the channel number, the quantity of noodles that can be delivered, and the reservation for Way 1 and Way 2. [cite: 4]
Channel No. | Quantity delivered | Reservation Way 1 | Reservation Way 2
---|---|---|---
1 | 1 | |
2 | 6 | Shop 1: 6 | Shop 1: 6
3 | 5 | Shop 1: 5 |
4 | 7 | Shop 1: 7 | Shop 1: 7
5 | 4 | |
6 | 8 | Shop 2: 8 | Shop 1: 8
7 | 9 | Shop 2: 9 | Shop 2: 9
8 | 3 | Shop 2: 3 | Shop 2: 3
9 | 10 | Shop 2: 10 | Shop 2: 10
10 | 2 | Shop 3: 2 | Shop 3: 2
11 | 12 | Shop 3: 12 | Shop 3: 12
12 | 13 | Shop 3: 13 | Shop 3: 13

[cite_start]Based on Figure 1, the details of noodle channel reservations and collection for the three shops are as follows: [cite: 5]

**Way 1:**
* [cite_start]Shop 1 is reserved channels 1-5 and chooses to collect noodles from channels 2, 3, and 4, totaling $6+5+7=18$ units. [cite: 5]
* [cite_start]Shop 2 is reserved channels 6-9 and chooses to collect noodles from channels 6, 7, and 9, totaling $8+9+10=27$ units. [cite: 5]
* [cite_start]Shop 3 is reserved channels 10-12 and chooses to collect noodles from channels 10, 11, and 12, totaling $2+12+13=27$ units. [cite: 5]

**Way 2:**
* [cite_start]Shop 1 is reserved channels 1-6 and chooses to collect noodles from channels 2, 4, and 6, totaling $6+7+8=21$ units. [cite: 5]
* [cite_start]Shop 2 is reserved channels 7-9 and chooses to collect noodles from channels 7, 8, and 9, totaling $9+3+10=22$ units. [cite: 5]
* [cite_start]Shop 3 is reserved channels 10-12 and chooses to collect noodles from channels 10, 11, and 12, totaling $2+12+13=27$ units. [cite: 5]

It can be seen that in Way 1, Shop 1 received the least total noodles among the three shops, which was 18 units. In Way 2, Shop 1 also received the least total noodles, but it received 21 units. [cite_start]Therefore, the allocation strategy in Way 2 is considered better. [cite: 6]

The factory must try to find an allocation strategy that maximizes the minimum quantity of noodles allocated to any shop. [cite_start]This method of reserving channels is considered a fair allocation. [cite: 6]

**Your Task:**
[cite_start]Write an efficient program to find the method that makes the shops feel that the allocation of noodle collection channels is fair. [cite: 6]

**Input:**
* Line 1: Three integers N, M, and K, separated by spaces. [cite_start]N represents the number of noodle collection channels, M represents the number of shops, and K represents the quota of channels each shop can collect from. [cite: 6]
    * [cite_start]Constraints: $5 \le N \le 100,000$, $2 \le M \le 100$, $1 \le K \le 4,000$, and $M \times K \le N$. [cite: 6]
* [cite_start]The next N lines: Each line contains an integer $e_i$, representing the quantity of noodles that can be collected from channel $i$. [cite: 6]
    * [cite_start]Constraints: $0 < e_i \le 500,000$ and $1 \le i \le N$. [cite: 6]

**Output:**
[cite_start]One line displaying a single integer, which is the minimum total quantity of noodles allocated to a shop in the fairest allocation strategy. [cite: 7]

**Example:**
**Example 1 Input/Output:**
Input:
12 3 3
1
6
5
7
4
8
9
3
10
2
12
13
Output:
[cite_start]21 [cite: 7]

**Example 2 Input/Output:**
Input:
10 3 1
1
9
5
7
4
8
9
3
10
2
Output:
[cite_start]9 [cite: 9]

**Constraints:**
* [cite_start]Input: Standard Input (keyboard) [cite: 11]
* [cite_start]Output: Standard Output (screen) [cite: 11]
* [cite_start]Maximum processing time: 1 second [cite: 11]
* [cite_start]Maximum memory usage: 128 MB [cite: 11]
* [cite_start]Maximum score for the problem: 100 points [cite: 11]
* [cite_start]Program execution condition: The program must compile successfully. [cite: 11]

**Other Requirements:**
[cite_start]Contestants must include the following program header: [cite: 12]
```
/*
TASK: TaskName
AUTHOR: YourName YourLastName
CENTER: YourCenter
*/
```

[cite_start]**Additional Information about Test Cases:** [cite: 13]
| Set No. | Score for this set | Condition                                                                  |
| :------ | :----------------- | :------------------------------------------------------------------------- |
| 1       | 7                  | $N=10$; $M=3$; [cite_start]$K=2$ [cite: 14]                                              |
| 2       | 7                  | $N=20$; $M=2$; [cite_start]$K=3$ [cite: 14]                                              |
| 3       | 7                  | $N=30$; $M=3$; [cite_start]$K=4$ [cite: 14]                                              |
| 4       | 5                  | $N=500$; $M=7$; [cite_start]$K=2$ and all $e_i \le 20$ [cite: 14]                          |
| 5       | 5                  | $N=500$; $M=8$; [cite_start]$K=2$ [cite: 14]                                              |
| 6       | 5                  | $N=1,000$; $M=10$; [cite_start]$K=3$ and all $e_i \le 20$ [cite: 14]                       |
| 7       | 5                  | $N=1,000$; $M=10$; [cite_start]$K=3$ [cite: 14]                                           |
| 8       | 7                  | $N=10,000$; $M=60$; [cite_start]$K=15$ [cite: 14]                                         |
| 9       | 7                  | $N=20,000$; $M=100$; [cite_start]$K=20$ [cite: 14]                                        |
| 10      | 5                  | $N=50,000$; $M=100$; [cite_start]$K=1$ and all $e_i \le 20$ [cite: 14]                    |
| 11      | 3                  | $N=50,000$; $M=100$; [cite_start]$K=20$ [cite: 14]                                        |
| 12      | 3                  | $N=80,000$; $M=100$; [cite_start]$K=50$ and all $e_i \le 20$ [cite: 14]                   |
| 13      | 7                  | $N=100,000$; $M=7$; [cite_start]$K \le 4000$ and grouped test data [cite: 14]             |
| 14      | 5                  | $N=100,000$; $M=100$; [cite_start]$K=200$ [cite: 14]                                      |
| 15      | 5                  | $N=100,000$; $M=40$; [cite_start]$K=2,000$ [cite: 14]                                     |
| 16      | 7                  | $N=100,000$; $M \le 25$; [cite_start]$K=4,000$ and grouped test data [cite: 14]           |
| 17      | 5                  | [cite_start]All $e_i$ values are sorted in ascending order. [cite: 14]                    |
| 18      | 5                  | [cite_start]All $e_i$ values are sorted in descending order. [cite: 14]                   |